{"mappings":"AAGA,MAAMA,EAAOC,SAASC,cAAc,kBAIpCF,EAAKG,iBAAiB,QAASC,UAASC,GAmBxC,SAAsBC,GAEpB,MACEC,UA7BJC,MA6BgBA,EA7BhBC,QA6BuBA,IACjBH,EAAKI,cACDC,EAAY,CACdH,MAAOA,EAAMI,MACbH,QAASA,EAAQG,QCjCzB,SAAeC,EAAKD,GAChB,IACA,MAAME,EAAkBC,KAAKC,UAAUJ,GACvCK,aAAaC,QAAQL,EAAKC,GAC1B,MAAOK,GACPC,QAAQD,MAAM,oBAAqBA,EAAMV,UD+BzCY,CAhCqB,sBAgCEV,GA7BsBW,CAAYjB,IAAQ,MAErEL,EAAKG,iBAAiB,UAEtB,SAAsBE,GACpBA,EAAMkB,iBACN,MACEhB,UAdJC,MAcgBA,EAdhBC,QAcuBA,IACjBJ,EAAMK,cAEV,GAAoB,KAAhBF,EAAMI,OAAkC,KAAlBH,EAAQG,MAChC,OAAOY,MAAM,kCAGfJ,QAAQK,IAAI,UAAUjB,EAAMI,mBAAmBH,EAAQG,SCJzD,SAAiBC,GACf,IACEI,aAAaS,WAAWb,GACxB,MAAOM,GACPC,QAAQD,MAAM,uBAAwBA,EAAMV,UDC9CkB,CAlBuB,uBAmBvBtB,EAAMK,cAAckB","sources":["src/js/03-feedback.js","src/js/storage.js"],"sourcesContent":["// import throttle from 'lodash.throttle';\nimport { save, remove } from './storage';\n\nconst form = document.querySelector(\".feedback-form\");\nconst LOCALSTORAGE_KEY = \"feedback-form-state\";\n\n\nform.addEventListener(\"input\", throttle(event => saveChanges(event), 500));\n\nform.addEventListener(\"submit\", handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  const {\n    elements: { email, message }\n  } = event.currentTarget;\n\n  if (email.value === \"\" || message.value === \"\") {\n    return alert(\"Please fill in all the fields!\");\n  }\n\n  console.log(`email: ${email.value}, message: ${message.value}`);\n  remove(LOCALSTORAGE_KEY);  \n  event.currentTarget.reset();\n}\n\nfunction saveChanges (data) {\n    \n  const {\n    elements: { email, message }\n  } = data.currentTarget;\n    const iputsData = {\n        email: email.value,\n        message: message.value,\n    }; \n   \n    save(LOCALSTORAGE_KEY, iputsData);\n\n}\n\n","function save (key, value){\n    try {\n    const serializedState = JSON.stringify(value);\n    localStorage.setItem(key, serializedState);\n  } catch (error) {\n    console.error(\"Set state error: \", error.message);\n  }\n};\n\nfunction load (key){\n  try {\n    const serializedState = localStorage.getItem(key);\n    return serializedState === null ? undefined : JSON.parse(serializedState);\n  } catch (error) {\n    console.error(\"Get state error: \", error.message);\n  }\n};\nfunction remove (key){\n  try {\n    localStorage.removeItem(key);\n  } catch (error) {\n    console.error(\"Remove state error: \", error.message);\n  }\n};\n\nexport {\n    save,\n    load,\n    remove,\n};"],"names":["$026a6f0148ec0d8a$var$form","document","querySelector","addEventListener","throttle","event","data","elements","email","message","currentTarget","iputsData","value","key","serializedState","JSON","stringify","localStorage","setItem","error","console","$3c18e26f73e7af80$export$a1544dad697b423d","$026a6f0148ec0d8a$var$saveChanges","preventDefault","alert","log","removeItem","$3c18e26f73e7af80$export$cd7f480d6b8286c3","reset"],"version":3,"file":"03-feedback.e90c7373.js.map"}