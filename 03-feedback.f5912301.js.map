{"mappings":"AAGaA,SAASC,cAAc,mBCHpC,SAAeC,EAAKC,GAChB,IACA,MAAMC,EAAkBC,KAAKC,UAAUH,GACvCI,aAAaC,QAAQN,EAAKE,GAC1B,MAAOK,GACPC,QAAQD,MAAM,oBAAqBA,EAAME,UDC7CC,CAAK,OAAQ","sources":["src/js/03-feedback.js","src/js/storage.js"],"sourcesContent":["// import throttle from 'lodash.throttle';\nimport { save, remove } from './storage';\n\nconst form = document.querySelector(\".feedback-form\");\nconst LOCALSTORAGE_KEY = \"feedback-form-state\";\n\nsave(\"test\", \"test\");\n\n// form.addEventListener(\"input\", handleClick);\n\n// form.addEventListener(\"submit\", handleSubmit);\n\n// function handleSubmit(event) {\n//   event.preventDefault();\n//   const {\n//     elements: { email, message }\n//   } = event.currentTarget;\n\n//   if (email.value === \"\" || message.value === \"\") {\n//     return alert(\"Please fill in all the fields!\");\n//   }\n\n//   console.log(`email: ${email.value}, message: ${message.value}`);\n//   remove(LOCALSTORAGE_KEY);  \n//   event.currentTarget.reset();\n// }\n\n// function follow (data) {\n    \n//   const {\n//     elements: { email, message }\n//   } = data.currentTarget;\n//     const iputsData = {\n//         email: email.value,\n//         message: message.value,\n//     }; \n   \n//     save(LOCALSTORAGE_KEY, iputsData);\n\n// }\n\n// const handleClick = (event) => {\n//   console.log(\"event: \", event);\n//   console.log(\"event type: \", event.type);\n//   console.log(\"currentTarget: \", event.currentTarget);\n// };","function save (key, value){\n    try {\n    const serializedState = JSON.stringify(value);\n    localStorage.setItem(key, serializedState);\n  } catch (error) {\n    console.error(\"Set state error: \", error.message);\n  }\n};\n\nfunction load (key){\n  try {\n    const serializedState = localStorage.getItem(key);\n    return serializedState === null ? undefined : JSON.parse(serializedState);\n  } catch (error) {\n    console.error(\"Get state error: \", error.message);\n  }\n};\nfunction remove (key){\n  try {\n    localStorage.removeItem(key);\n  } catch (error) {\n    console.error(\"Remove state error: \", error.message);\n  }\n};\n\nexport {\n    save,\n    load,\n    remove,\n};"],"names":["document","querySelector","key","value","serializedState","JSON","stringify","localStorage","setItem","error","console","message","$3c18e26f73e7af80$export$a1544dad697b423d"],"version":3,"file":"03-feedback.f5912301.js.map"}