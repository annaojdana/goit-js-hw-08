{"mappings":"AAGA,MAAMA,EAAOC,SAASC,cAAc,kBASpCF,EAAKG,iBAAiB,SANDC,IACjBC,QAAQC,IAAI,UAAWF,GACvBC,QAAQC,IAAI,eAAgBF,EAAMG,MAClCF,QAAQC,IAAI,kBAAmBF,EAAMI,kBAKzCR,EAAKG,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMK,iBACN,MACEC,UAnBJC,MAmBgBA,EAnBhBC,QAmBuBA,IACjBR,EAAMI,cAEV,GAAoB,KAAhBG,EAAME,OAAkC,KAAlBD,EAAQC,MAChC,OAAOC,MAAM,kCAGfT,QAAQC,IAAI,UAAUK,EAAME,mBAAmBD,EAAQC,SCTzD,SAAiBE,GACf,IACEC,aAAaC,WAAWF,GACxB,MAAOG,GACPb,QAAQa,MAAM,uBAAwBA,EAAMN,UDM9CO,CAvBuB,uBAwBvBf,EAAMI,cAAcY","sources":["src/js/03-feedback.js","src/js/storage.js"],"sourcesContent":["// import throttle from 'lodash.throttle';\nimport { save, remove } from './storage';\n\nconst form = document.querySelector(\".feedback-form\");\nconst LOCALSTORAGE_KEY = \"feedback-form-state\";\n\nconst handleClick = (event) => {\n    console.log(\"event: \", event);\n    console.log(\"event type: \", event.type);\n    console.log(\"currentTarget: \", event.currentTarget);\n};\n\nform.addEventListener(\"input\", handleClick);\n\nform.addEventListener(\"submit\", handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  const {\n    elements: { email, message }\n  } = event.currentTarget;\n\n  if (email.value === \"\" || message.value === \"\") {\n    return alert(\"Please fill in all the fields!\");\n  }\n\n  console.log(`email: ${email.value}, message: ${message.value}`);\n  remove(LOCALSTORAGE_KEY);  \n  event.currentTarget.reset();\n}\n\n// function follow (data) {\n    \n//   const {\n//     elements: { email, message }\n//   } = data.currentTarget;\n//     const iputsData = {\n//         email: email.value,\n//         message: message.value,\n//     }; \n   \n//     save(LOCALSTORAGE_KEY, iputsData);\n\n// }\n\n","function save (key, value){\n    try {\n    const serializedState = JSON.stringify(value);\n    localStorage.setItem(key, serializedState);\n  } catch (error) {\n    console.error(\"Set state error: \", error.message);\n  }\n};\n\nfunction load (key){\n  try {\n    const serializedState = localStorage.getItem(key);\n    return serializedState === null ? undefined : JSON.parse(serializedState);\n  } catch (error) {\n    console.error(\"Get state error: \", error.message);\n  }\n};\nfunction remove (key){\n  try {\n    localStorage.removeItem(key);\n  } catch (error) {\n    console.error(\"Remove state error: \", error.message);\n  }\n};\n\nexport {\n    save,\n    load,\n    remove,\n};"],"names":["$026a6f0148ec0d8a$var$form","document","querySelector","addEventListener","event","console","log","type","currentTarget","preventDefault","elements","email","message","value","alert","key","localStorage","removeItem","error","$3c18e26f73e7af80$export$cd7f480d6b8286c3","reset"],"version":3,"file":"03-feedback.27720d38.js.map"}